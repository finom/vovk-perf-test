<% const vars = { 
  ControllerName: t.TheThing + 'Controller',
  ServiceName: t.TheThing + 'Service',
}; %>
---
outDir: <%= t.defaultOutDir %>
fileName: <%= vars.ControllerName + '.ts' %>
sourceName: <%= vars.ControllerName %>
compiledName: <%= t.TheThing + 'RPC' %>
---

import { prefix, get, post, operation, type KnownAny } from 'vovk';
<% if(t.withService) { %>
import <%= vars.ServiceName %> from './<%= vars.ServiceName %><%= t.nodeNextResolutionExt.ts %>';
<% } %>

@prefix('<%= t['the-things'] %>')
export default class <%= vars.ControllerName %> {
    @operation({
        summary: 'Get <%= t.TheThings %>',
    })
    @get()
    static get<%= t.TheThings %> = (_req: unknown, params: KnownAny) => {
        if('id' in params) throw new Error('Unexpected id param');
        return null;
    }

    @operation({
        summary: 'Create <%= t.TheThing %>',
    })
    @post('{id}')
    static create<%= t.TheThing %> = (_req: unknown, params: KnownAny) => {
        if(!('id' in params)) throw new Error('Missing id param');
        return null;
    };
}